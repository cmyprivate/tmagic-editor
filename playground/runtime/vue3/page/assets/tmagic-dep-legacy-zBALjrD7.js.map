{"version":3,"file":"tmagic-dep-legacy-zBALjrD7.js","sources":["../../../../../../packages/data-source/dist/tmagic-data-source.js","../../../../../../packages/schema/dist/tmagic-schema.js","../../../../../../packages/utils/dist/tmagic-utils.js","../../../../../../packages/dep/dist/tmagic-dep.js"],"sourcesContent":["import EventEmitter$1, { EventEmitter } from 'events';\nimport { setValueByKeyPath, getValueByKeyPath, getDefaultValueFromFields, traverseNode, Watcher, Target, DSL_NODE_KEY_COPY_PREFIX, isDataSourceTarget, isDataSourceCondTarget, compiledCond, NODE_CONDS_KEY, isPage, isPageFragment, replaceChildNode, DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX, dataSourceTemplateRegExp, compiledNode, getNodes, getDepNodeIds } from '@tmagic/core';\nimport State from 'deep-state-observer';\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto$c = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$9 = objectProto$c.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$c.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty$9.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString$1.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$b = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto$b.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag$2 = '[object Function]',\n    genTag$1 = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/** Used for built-in method references. */\nvar funcProto$1 = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$1 = funcProto$1.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString$1.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto$a = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$8 = objectProto$a.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty$8).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (-1);\n\n  while ((++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/** Used for built-in method references. */\nvar objectProto$9 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$7 = objectProto$9.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty$7.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/** Used for built-in method references. */\nvar objectProto$8 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$8;\n\n  return value === proto;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar argsTag$2 = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag$2;\n}\n\n/** Used for built-in method references. */\nvar objectProto$7 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$6 = objectProto$7.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable$1 = objectProto$7.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$6.call(value, 'callee') &&\n    !propertyIsEnumerable$1.call(value, 'callee');\n};\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$2 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$2 = freeExports$2 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;\n\n/** Built-in value references. */\nvar Buffer$1 = moduleExports$2 ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]',\n    arrayTag$1 = '[object Array]',\n    boolTag$2 = '[object Boolean]',\n    dateTag$2 = '[object Date]',\n    errorTag$1 = '[object Error]',\n    funcTag$1 = '[object Function]',\n    mapTag$4 = '[object Map]',\n    numberTag$2 = '[object Number]',\n    objectTag$2 = '[object Object]',\n    regexpTag$2 = '[object RegExp]',\n    setTag$4 = '[object Set]',\n    stringTag$2 = '[object String]',\n    weakMapTag$2 = '[object WeakMap]';\n\nvar arrayBufferTag$2 = '[object ArrayBuffer]',\n    dataViewTag$3 = '[object DataView]',\n    float32Tag$2 = '[object Float32Array]',\n    float64Tag$2 = '[object Float64Array]',\n    int8Tag$2 = '[object Int8Array]',\n    int16Tag$2 = '[object Int16Array]',\n    int32Tag$2 = '[object Int32Array]',\n    uint8Tag$2 = '[object Uint8Array]',\n    uint8ClampedTag$2 = '[object Uint8ClampedArray]',\n    uint16Tag$2 = '[object Uint16Array]',\n    uint32Tag$2 = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] =\ntypedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] =\ntypedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] =\ntypedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] =\ntypedArrayTags[uint32Tag$2] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] =\ntypedArrayTags[arrayBufferTag$2] = typedArrayTags[boolTag$2] =\ntypedArrayTags[dataViewTag$3] = typedArrayTags[dateTag$2] =\ntypedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag$4] = typedArrayTags[numberTag$2] =\ntypedArrayTags[objectTag$2] = typedArrayTags[regexpTag$2] =\ntypedArrayTags[setTag$4] = typedArrayTags[stringTag$2] =\ntypedArrayTags[weakMapTag$2] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$6 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$5 = objectProto$6.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$5.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$4 = objectProto$5.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$4.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty$3.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$2 = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED$2 ? undefined : result;\n  }\n  return hasOwnProperty$2.call(data, key) ? data[key] : undefined;\n}\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty$1.call(data, key);\n}\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/* Built-in method references that are verified to be native. */\nvar Map$1 = getNative(root, 'Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map$1 || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value)) {\n      {\n        arrayPush(result, value);\n      }\n    }\n  }\n  return result;\n}\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE$1 = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map$1 || (pairs.length < LARGE_ARRAY_SIZE$1 - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$1.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols$1 = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols$1 ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols$1(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\n/* Built-in method references that are verified to be native. */\nvar Promise$1 = getNative(root, 'Promise');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\n/** `Object#toString` result references. */\nvar mapTag$3 = '[object Map]',\n    objectTag$1 = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag$3 = '[object Set]',\n    weakMapTag$1 = '[object WeakMap]';\n\nvar dataViewTag$2 = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map$1),\n    promiseCtorString = toSource(Promise$1),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag$2) ||\n    (Map$1 && getTag(new Map$1) != mapTag$3) ||\n    (Promise$1 && getTag(Promise$1.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag$3) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag$1)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag$1 ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag$2;\n        case mapCtorString: return mapTag$3;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag$3;\n        case weakMapCtorString: return weakMapTag$1;\n      }\n    }\n    return result;\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/** `Object#toString` result references. */\nvar boolTag$1 = '[object Boolean]',\n    dateTag$1 = '[object Date]',\n    mapTag$2 = '[object Map]',\n    numberTag$1 = '[object Number]',\n    regexpTag$1 = '[object RegExp]',\n    setTag$2 = '[object Set]',\n    stringTag$1 = '[object String]',\n    symbolTag$1 = '[object Symbol]';\n\nvar arrayBufferTag$1 = '[object ArrayBuffer]',\n    dataViewTag$1 = '[object DataView]',\n    float32Tag$1 = '[object Float32Array]',\n    float64Tag$1 = '[object Float64Array]',\n    int8Tag$1 = '[object Int8Array]',\n    int16Tag$1 = '[object Int16Array]',\n    int32Tag$1 = '[object Int32Array]',\n    uint8Tag$1 = '[object Uint8Array]',\n    uint8ClampedTag$1 = '[object Uint8ClampedArray]',\n    uint16Tag$1 = '[object Uint16Array]',\n    uint32Tag$1 = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag$1:\n      return cloneArrayBuffer(object);\n\n    case boolTag$1:\n    case dateTag$1:\n      return new Ctor(+object);\n\n    case dataViewTag$1:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag$1: case float64Tag$1:\n    case int8Tag$1: case int16Tag$1: case int32Tag$1:\n    case uint8Tag$1: case uint8ClampedTag$1: case uint16Tag$1: case uint32Tag$1:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag$2:\n      return new Ctor;\n\n    case numberTag$1:\n    case stringTag$1:\n      return new Ctor(object);\n\n    case regexpTag$1:\n      return cloneRegExp(object);\n\n    case setTag$2:\n      return new Ctor;\n\n    case symbolTag$1:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/** `Object#toString` result references. */\nvar mapTag$1 = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag$1;\n}\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n/** `Object#toString` result references. */\nvar setTag$1 = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag$1;\n}\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG$1 = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG$1 = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG$1,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG$1;\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (length >= LARGE_ARRAY_SIZE) {\n    var set = createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = value;\n\n    value = (value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject));\n});\n\nclass ObservedData {\n}\n\nclass SimpleObservedData extends ObservedData {\n  data = {};\n  event = new EventEmitter();\n  constructor(initialData) {\n    super();\n    this.data = initialData;\n  }\n  update(data, path) {\n    if (path) {\n      setValueByKeyPath(path, data, this.data);\n    } else {\n      this.data = data;\n    }\n    const changeEvent = {\n      updateData: data,\n      path: path ?? \"\"\n    };\n    if (path) {\n      this.event.emit(path, changeEvent);\n    }\n    this.event.emit(\"\", changeEvent);\n  }\n  on(path, callback) {\n    this.event.on(path, callback);\n  }\n  off(path, callback) {\n    this.event.off(path, callback);\n  }\n  getData(path) {\n    return path ? getValueByKeyPath(path, this.data) : this.data;\n  }\n  destroy() {\n  }\n}\n\nclass DataSource extends EventEmitter$1 {\n  isInit = false;\n  /** @tmagic/core 实例 */\n  app;\n  mockData;\n  #type = \"base\";\n  #id;\n  #schema;\n  #observedData;\n  /** 数据源自定义字段配置 */\n  #fields = [];\n  /** 数据源自定义方法配置 */\n  #methods = [];\n  constructor(options) {\n    super();\n    this.#id = options.schema.id;\n    this.#schema = options.schema;\n    this.app = options.app;\n    this.setFields(options.schema.fields);\n    this.setMethods(options.schema.methods || []);\n    let data = options.initialData;\n    const ObservedDataClass = options.ObservedDataClass || SimpleObservedData;\n    if (this.app.platform === \"editor\") {\n      this.mockData = options.schema.mocks?.find((mock) => mock.useInEditor)?.data || this.getDefaultData();\n      data = cloneDeep(this.mockData);\n    } else if (typeof options.useMock === \"boolean\" && options.useMock) {\n      this.mockData = options.schema.mocks?.find((mock) => mock.enable)?.data;\n      data = this.mockData || this.getDefaultData();\n    } else if (!options.initialData) {\n      data = this.getDefaultData();\n    } else {\n      this.#observedData = new ObservedDataClass(options.initialData ?? {});\n      this.isInit = true;\n      return;\n    }\n    this.#observedData = new ObservedDataClass(data ?? {});\n  }\n  get id() {\n    return this.#id;\n  }\n  get type() {\n    return this.#type;\n  }\n  get schema() {\n    return this.#schema;\n  }\n  get fields() {\n    return this.#fields;\n  }\n  get methods() {\n    return this.#methods;\n  }\n  setFields(fields) {\n    this.#fields = fields;\n  }\n  setMethods(methods) {\n    this.#methods = methods;\n  }\n  get data() {\n    return this.#observedData.getData(\"\");\n  }\n  setData(data, path) {\n    this.#observedData.update(data, path);\n    const changeEvent = {\n      updateData: data,\n      path\n    };\n    this.emit(\"change\", changeEvent);\n  }\n  setValue(path, data) {\n    return this.setData(data, path);\n  }\n  onDataChange(path, callback) {\n    this.#observedData.on(path, callback);\n  }\n  offDataChange(path, callback) {\n    this.#observedData.off(path, callback);\n  }\n  getDefaultData() {\n    return getDefaultValueFromFields(this.#fields);\n  }\n  async init() {\n    this.isInit = true;\n  }\n  destroy() {\n    this.#fields = [];\n    this.removeAllListeners();\n    this.#observedData.destroy();\n  }\n}\n\nconst urlencoded = (data) => Object.entries(data).reduce((prev, [key, value]) => {\n  let v = value;\n  if (typeof value === \"object\") {\n    v = JSON.stringify(value);\n  }\n  if (typeof value !== \"undefined\") {\n    return `${prev}${prev ? \"&\" : \"\"}${globalThis.encodeURIComponent(key)}=${globalThis.encodeURIComponent(`${v}`)}`;\n  }\n  return prev;\n}, \"\");\nconst webRequest = async (options) => {\n  const { url, method = \"GET\", headers = {}, params = {}, data = {}, ...config } = options;\n  const query = urlencoded(params);\n  let body = JSON.stringify(data);\n  if (headers[\"Content-Type\"]?.includes(\"application/x-www-form-urlencoded\")) {\n    body = urlencoded(data);\n  }\n  const response = await globalThis.fetch(query ? `${url}?${query}` : url, {\n    method,\n    headers,\n    body: method === \"GET\" ? void 0 : body,\n    ...config\n  });\n  return response.json();\n};\nclass HttpDataSource extends DataSource {\n  /** 是否正在发起请求 */\n  isLoading = false;\n  error;\n  /** 请求配置 */\n  httpOptions;\n  /** 请求函数 */\n  #fetch;\n  /** 请求前需要执行的函数队列 */\n  #beforeRequest = [];\n  /** 请求后需要执行的函数队列 */\n  #afterRequest = [];\n  #type = \"http\";\n  constructor(options) {\n    const { options: httpOptions } = options.schema;\n    super(options);\n    this.httpOptions = httpOptions;\n    if (typeof options.request === \"function\") {\n      this.#fetch = options.request;\n    } else if (typeof globalThis.fetch === \"function\") {\n      this.#fetch = webRequest;\n    }\n    this.methods.forEach((method) => {\n      if (typeof method.content !== \"function\") return;\n      if (method.timing === \"beforeRequest\") {\n        this.#beforeRequest.push(method.content);\n      }\n      if (method.timing === \"afterRequest\") {\n        this.#afterRequest.push(method.content);\n      }\n    });\n  }\n  get type() {\n    return this.#type;\n  }\n  async init() {\n    if (this.schema.autoFetch) {\n      await this.request();\n    }\n    super.init();\n  }\n  async request(options = {}) {\n    this.isLoading = true;\n    const { url, params, data, headers, ...otherHttpOptions } = this.httpOptions;\n    let reqOptions = {\n      url: typeof url === \"function\" ? url({ app: this.app, dataSource: this }) : url,\n      params: typeof params === \"function\" ? params({ app: this.app, dataSource: this }) : params,\n      data: typeof data === \"function\" ? data({ app: this.app, dataSource: this }) : data,\n      headers: typeof headers === \"function\" ? headers({ app: this.app, dataSource: this }) : headers,\n      ...otherHttpOptions,\n      ...options\n    };\n    try {\n      for (const method of this.#beforeRequest) {\n        await method({ options: reqOptions, params: {}, dataSource: this, app: this.app });\n      }\n      if (typeof this.schema.beforeRequest === \"function\") {\n        reqOptions = await this.schema.beforeRequest(reqOptions, { app: this.app, dataSource: this });\n      }\n      if (this.mockData) {\n        this.setData(this.mockData);\n      } else {\n        let res = await this.#fetch?.(reqOptions);\n        for (const method of this.#afterRequest) {\n          await method({ res, options: reqOptions, params: {}, dataSource: this, app: this.app });\n        }\n        if (typeof this.schema.afterResponse === \"function\") {\n          res = await this.schema.afterResponse(res, { app: this.app, dataSource: this, options: reqOptions });\n        }\n        if (this.schema.responseOptions?.dataPath) {\n          const data2 = getValueByKeyPath(this.schema.responseOptions.dataPath, res);\n          this.setData(data2);\n        } else {\n          this.setData(res);\n        }\n      }\n      this.error = void 0;\n    } catch (error) {\n      this.error = {\n        msg: error.message\n      };\n      this.emit(\"error\", error);\n    }\n    this.isLoading = false;\n  }\n  get(options) {\n    return this.request({\n      ...options,\n      method: \"GET\"\n    });\n  }\n  post(options) {\n    return this.request({\n      ...options,\n      method: \"POST\"\n    });\n  }\n}\n\nconst cache = /* @__PURE__ */ new Map();\nconst getDeps = (ds, nodes, inEditor) => {\n  let cacheKey;\n  if (inEditor) {\n    const ids = [];\n    nodes.forEach((node) => {\n      traverseNode(node, (node2) => {\n        ids.push(node2.id);\n      });\n    });\n    cacheKey = `${ds.id}:${ids.join(\":\")}`;\n  } else {\n    cacheKey = `${ds.id}:${nodes.map((node) => node.id).join(\":\")}`;\n  }\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n  const watcher = new Watcher();\n  watcher.addTarget(\n    new Target({\n      id: ds.id,\n      type: \"data-source\",\n      isTarget: (key, value) => {\n        if (`${key}`.includes(DSL_NODE_KEY_COPY_PREFIX)) {\n          return false;\n        }\n        return isDataSourceTarget(ds, key, value, true);\n      }\n    })\n  );\n  watcher.addTarget(\n    new Target({\n      id: ds.id,\n      type: \"cond\",\n      isTarget: (key, value) => isDataSourceCondTarget(ds, key, value, true)\n    })\n  );\n  watcher.collect(nodes, {}, true);\n  const { deps } = watcher.getTarget(ds.id, \"data-source\");\n  const { deps: condDeps } = watcher.getTarget(ds.id, \"cond\");\n  const result = { deps, condDeps };\n  cache.set(cacheKey, result);\n  return result;\n};\n\nconst compiledCondition = (cond, data) => {\n  let result = true;\n  for (const { op, value, range, field } of cond) {\n    const [sourceId, ...fields] = field;\n    const dsData = data[sourceId];\n    if (!dsData || !fields.length) {\n      break;\n    }\n    try {\n      const fieldValue = getValueByKeyPath(fields.join(\".\"), dsData);\n      if (!compiledCond(op, fieldValue, value, range)) {\n        result = false;\n        break;\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n  return result;\n};\nconst compliedConditions = (node, data) => {\n  if (!node[NODE_CONDS_KEY] || !Array.isArray(node[NODE_CONDS_KEY]) || !node[NODE_CONDS_KEY].length) return true;\n  for (const { cond } of node[NODE_CONDS_KEY]) {\n    if (!cond) continue;\n    if (compiledCondition(cond, data)) {\n      return true;\n    }\n  }\n  return false;\n};\nconst updateNode = (node, dsl) => {\n  if (isPage(node) || isPageFragment(node)) {\n    const index = dsl.items?.findIndex((child) => child.id === node.id);\n    dsl.items.splice(index, 1, node);\n  } else {\n    replaceChildNode(node, dsl.items);\n  }\n};\nconst createIteratorContentData = (itemData, dsId, fields = [], dsData = {}) => {\n  const data = {\n    ...dsData,\n    [dsId]: {}\n  };\n  let rawData = cloneDeep(dsData[dsId]);\n  let obj = data[dsId];\n  fields.forEach((key, index) => {\n    Object.assign(obj, rawData);\n    if (index === fields.length - 1) {\n      obj[key] = itemData;\n      return;\n    }\n    if (Array.isArray(rawData[key])) {\n      rawData[key] = {};\n      obj[key] = {};\n    }\n    rawData = rawData[key];\n    obj = obj[key];\n  });\n  return data;\n};\nconst compliedDataSourceField = (value, data) => {\n  const [prefixId, ...fields] = value;\n  const prefixIndex = prefixId.indexOf(DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX);\n  if (prefixIndex > -1) {\n    const dsId = prefixId.substring(prefixIndex + DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX.length);\n    const dsData = data[dsId];\n    if (!dsData) return value;\n    try {\n      return getValueByKeyPath(fields.join(\".\"), dsData);\n    } catch (e) {\n      return value;\n    }\n  }\n  return value;\n};\nconst template = (value, data) => value.replaceAll(dataSourceTemplateRegExp, (match, $1) => {\n  try {\n    return getValueByKeyPath($1, data);\n  } catch (e) {\n    return match;\n  }\n});\nconst compiledNodeField = (value, data) => {\n  if (typeof value === \"string\") {\n    return template(value, data);\n  }\n  if (value?.isBindDataSource && value.dataSourceId) {\n    return data[value.dataSourceId];\n  }\n  if (value?.isBindDataSourceField && value.dataSourceId && typeof value.template === \"string\") {\n    return template(value.template, data[value.dataSourceId]);\n  }\n  if (Array.isArray(value) && typeof value[0] === \"string\") {\n    return compliedDataSourceField(value, data);\n  }\n  return value;\n};\nconst compliedIteratorItem = ({\n  compile,\n  dsId,\n  item,\n  deps,\n  condDeps,\n  inEditor,\n  ctxData\n}) => {\n  const { items, ...node } = item;\n  const newNode = cloneDeep(node);\n  if (condDeps[node.id]?.keys.length && !inEditor) {\n    newNode.condResult = compliedConditions(node, ctxData);\n  }\n  if (Array.isArray(items) && items.length) {\n    newNode.items = items.map(\n      (item2) => compliedIteratorItem({ compile, dsId, item: item2, deps, condDeps, inEditor, ctxData })\n    );\n  } else if (items) {\n    newNode.items = items;\n  }\n  if (!deps[newNode.id]?.keys.length) {\n    return newNode;\n  }\n  return compiledNode(\n    compile,\n    newNode,\n    {\n      [dsId]: deps\n    },\n    dsId\n  );\n};\nconst registerDataSourceOnDemand = async (dsl, dataSourceModules) => {\n  const { dataSourceMethodsDeps = {}, dataSourceCondDeps = {}, dataSourceDeps = {}, dataSources = [] } = dsl;\n  const dsModuleMap = {};\n  dataSources.forEach((ds) => {\n    let dep = dataSourceCondDeps[ds.id] || {};\n    if (!Object.keys(dep).length) {\n      dep = dataSourceDeps[ds.id] || {};\n    }\n    if (!Object.keys(dep).length) {\n      dep = dataSourceMethodsDeps[ds.id] || {};\n    }\n    if (Object.keys(dep).length && dataSourceModules[ds.type]) {\n      dsModuleMap[ds.type] = dataSourceModules[ds.type];\n    }\n  });\n  const modules = await Promise.all(Object.values(dsModuleMap).map((asyncModule) => asyncModule()));\n  const moduleMap = {};\n  modules.forEach((module, index) => {\n    const type = Object.keys(dsModuleMap)[index];\n    moduleMap[type] = module.default;\n  });\n  return moduleMap;\n};\n\nclass DataSourceManager extends EventEmitter$1 {\n  static dataSourceClassMap = /* @__PURE__ */ new Map();\n  static ObservedDataClass = SimpleObservedData;\n  static register(type, dataSource) {\n    DataSourceManager.dataSourceClassMap.set(type, dataSource);\n  }\n  static getDataSourceClass(type) {\n    return DataSourceManager.dataSourceClassMap.get(type);\n  }\n  static registerObservedData(ObservedDataClass) {\n    DataSourceManager.ObservedDataClass = ObservedDataClass;\n  }\n  app;\n  dataSourceMap = /* @__PURE__ */ new Map();\n  data = {};\n  useMock = false;\n  constructor({ app, useMock, initialData }) {\n    super();\n    this.app = app;\n    this.useMock = useMock;\n    if (initialData) {\n      this.data = initialData;\n    }\n    app.dsl?.dataSources?.forEach((config) => {\n      this.addDataSource(config);\n    });\n    const dataSourceList = Array.from(this.dataSourceMap);\n    if (typeof Promise.allSettled === \"function\") {\n      Promise.allSettled(dataSourceList.map(([, ds]) => this.init(ds))).then((values) => {\n        const data = {};\n        const errors = {};\n        values.forEach((value, index) => {\n          const dsId = dataSourceList[index][0];\n          if (value.status === \"fulfilled\") {\n            if (this.data[dsId]) {\n              data[dsId] = this.data[dsId];\n            } else {\n              delete data[dsId];\n            }\n          } else if (value.status === \"rejected\") {\n            delete data[dsId];\n            errors[dsId] = value.reason;\n          }\n        });\n        this.emit(\"init\", data, errors);\n      });\n    } else {\n      Promise.all(dataSourceList.map(([, ds]) => this.init(ds))).then(() => {\n        this.emit(\"init\", this.data);\n      }).catch(() => {\n        this.emit(\"init\", this.data);\n      });\n    }\n  }\n  async init(ds) {\n    if (ds.isInit) {\n      return;\n    }\n    if (this.app.jsEngine && ds.schema.disabledInitInJsEngine?.includes(this.app.jsEngine)) {\n      return;\n    }\n    for (const method of ds.methods) {\n      if (typeof method.content !== \"function\") return;\n      if (method.timing === \"beforeInit\") {\n        await method.content({ params: {}, dataSource: ds, app: this.app });\n      }\n    }\n    await ds.init();\n    for (const method of ds.methods) {\n      if (typeof method.content !== \"function\") return;\n      if (method.timing === \"afterInit\") {\n        await method.content({ params: {}, dataSource: ds, app: this.app });\n      }\n    }\n  }\n  get(id) {\n    return this.dataSourceMap.get(id);\n  }\n  async addDataSource(config) {\n    if (!config) return;\n    const DataSourceClass = DataSourceManager.dataSourceClassMap.get(config.type) || DataSource;\n    const ds = new DataSourceClass({\n      app: this.app,\n      schema: config,\n      request: this.app.request,\n      useMock: this.useMock,\n      initialData: this.data[config.id],\n      ObservedDataClass: DataSourceManager.ObservedDataClass\n    });\n    this.dataSourceMap.set(config.id, ds);\n    this.data[ds.id] = ds.data;\n    ds.on(\"change\", (changeEvent) => {\n      this.setData(ds, changeEvent);\n    });\n  }\n  setData(ds, changeEvent) {\n    this.data[ds.id] = ds.data;\n    this.emit(\"change\", ds.id, changeEvent);\n  }\n  removeDataSource(id) {\n    this.get(id)?.destroy();\n    delete this.data[id];\n    this.dataSourceMap.delete(id);\n  }\n  /**\n   * 更新数据源dsl，在编辑器中修改配置后需要更新，一般在其他环境下不需要更新dsl\n   * @param {DataSourceSchema[]} schemas 所有数据源配置\n   */\n  updateSchema(schemas) {\n    schemas.forEach((schema) => {\n      const ds = this.get(schema.id);\n      if (!ds) {\n        return;\n      }\n      this.removeDataSource(schema.id);\n      this.addDataSource(schema);\n      const newDs = this.get(schema.id);\n      if (newDs) {\n        this.init(newDs);\n      }\n    });\n  }\n  /**\n   * 将组件dsl中所有key中数据源相关的配置编译成对应的值\n   * @param {MNode} node 组件dsl\n   * @param {string | number} sourceId 数据源ID\n   * @param {boolean} deep 是否编译子项（items)，默认为false\n   * @returns {MNode} 编译后的组件dsl\n   */\n  compiledNode({ items, ...node }, sourceId, deep = false) {\n    const newNode = cloneDeep(node);\n    if (items) {\n      newNode.items = Array.isArray(items) && deep ? items.map((item) => this.compiledNode(item, sourceId, deep)) : items;\n    }\n    if (node.condResult === false) return newNode;\n    if (node.visible === false) return newNode;\n    return compiledNode(\n      (value) => compiledNodeField(value, this.data),\n      newNode,\n      this.app.dsl?.dataSourceDeps || {},\n      sourceId\n    );\n  }\n  /**\n   * 编译组件条件组配置（用于配置组件显示时机）\n   * @param {{ [NODE_CONDS_KEY]?: DisplayCond[] }} node 显示条件组配置\n   * @returns {boolean} 是否显示\n   */\n  compliedConds(node) {\n    return compliedConditions(node, this.data);\n  }\n  /**\n   * 编译迭代器容器的迭代项的显示条件\n   * @param {any[]} itemData 迭代数据\n   * @param {{ [NODE_CONDS_KEY]?: DisplayCond[] }} node 显示条件组配置\n   * @param {string[]} dataSourceField 迭代数据在数据源中的字段，格式如['dsId', 'key1', 'key2']\n   * @returns {boolean}是否显示\n   */\n  compliedIteratorItemConds(itemData, node, dataSourceField = []) {\n    const [dsId, ...keys] = dataSourceField;\n    const ds = this.get(dsId);\n    if (!ds) return true;\n    const ctxData = createIteratorContentData(itemData, ds.id, keys, this.data);\n    return compliedConditions(node, ctxData);\n  }\n  compliedIteratorItems(itemData, nodes, dataSourceField = []) {\n    const [dsId, ...keys] = dataSourceField;\n    const ds = this.get(dsId);\n    if (!ds) return nodes;\n    const inEditor = this.app.platform === \"editor\";\n    const ctxData = createIteratorContentData(itemData, ds.id, keys, this.data);\n    const { deps = {}, condDeps = {} } = getDeps(ds.schema, nodes, inEditor);\n    if (!Object.keys(deps).length && !Object.keys(condDeps).length) {\n      return nodes;\n    }\n    return nodes.map(\n      (item) => compliedIteratorItem({\n        compile: (value) => compiledNodeField(value, ctxData),\n        dsId: ds.id,\n        item,\n        deps,\n        condDeps,\n        inEditor,\n        ctxData\n      })\n    );\n  }\n  destroy() {\n    this.removeAllListeners();\n    this.data = {};\n    this.dataSourceMap.forEach((ds) => {\n      ds.destroy();\n    });\n    this.dataSourceMap.clear();\n  }\n  onDataChange(id, path, callback) {\n    return this.get(id)?.onDataChange(path, callback);\n  }\n  offDataChange(id, path, callback) {\n    return this.get(id)?.offDataChange(path, callback);\n  }\n}\nDataSourceManager.register(\"http\", HttpDataSource);\n\nconst createDataSourceManager = (app, useMock, initialData) => {\n  const { dsl, platform } = app;\n  if (!dsl?.dataSources) return;\n  const dataSourceManager = new DataSourceManager({ app, useMock, initialData });\n  if (dsl.dataSources && dsl.dataSourceCondDeps && platform !== \"editor\") {\n    getNodes(getDepNodeIds(dsl.dataSourceCondDeps), dsl.items).forEach((node) => {\n      node.condResult = dataSourceManager.compliedConds(node);\n      updateNode(node, dsl);\n    });\n  }\n  if (dsl.dataSources && dsl.dataSourceDeps) {\n    getNodes(getDepNodeIds(dsl.dataSourceDeps), dsl.items).forEach((node) => {\n      updateNode(dataSourceManager.compiledNode(node), dsl);\n    });\n  }\n  if (app.jsEngine !== \"nodejs\") {\n    dataSourceManager.on(\"change\", (sourceId, changeEvent) => {\n      const dep = dsl.dataSourceDeps?.[sourceId] || {};\n      const condDep = dsl.dataSourceCondDeps?.[sourceId] || {};\n      const nodeIds = union([...Object.keys(condDep), ...Object.keys(dep)]);\n      const pages = app.page?.data && app.platform !== \"editor\" ? [app.page.data] : dsl.items;\n      dataSourceManager.emit(\n        \"update-data\",\n        getNodes(nodeIds, pages).map((node) => {\n          if (app.platform !== \"editor\") {\n            node.condResult = dataSourceManager.compliedConds(node);\n          }\n          const newNode = dataSourceManager.compiledNode(node);\n          if (typeof app.page?.setData === \"function\") {\n            if (isPage(newNode)) {\n              app.page.setData(newNode);\n            } else {\n              const n = app.page.getNode(node.id);\n              n?.setData(newNode);\n            }\n          }\n          return newNode;\n        }),\n        sourceId,\n        changeEvent\n      );\n    });\n  }\n  return dataSourceManager;\n};\n\nconst ignoreFirstCall = (fn) => {\n  let calledTimes = 0;\n  return (...args) => {\n    if (calledTimes === 0) {\n      calledTimes += 1;\n      return;\n    }\n    return fn(...args);\n  };\n};\nclass DeepObservedData extends ObservedData {\n  state;\n  subscribers = /* @__PURE__ */ new Map();\n  constructor(initialData) {\n    super();\n    this.state = new State(initialData);\n  }\n  update = (data, path) => {\n    this.state?.update(path ?? \"\", data);\n  };\n  on = (path, callback) => {\n    const unsubscribe = this.state.subscribe(path, ignoreFirstCall(callback));\n    const pathSubscribers = this.subscribers.get(path) ?? /* @__PURE__ */ new Map();\n    pathSubscribers.set(callback, unsubscribe);\n    this.subscribers.set(path, pathSubscribers);\n  };\n  off = (path, callback) => {\n    const pathSubscribers = this.subscribers.get(path);\n    if (!pathSubscribers) return;\n    pathSubscribers.get(callback)?.();\n    pathSubscribers.delete(callback);\n  };\n  getData = (path) => !this.state ? {} : this.state?.get(path);\n  destroy = () => {\n    this.subscribers.forEach((pathSubscribers) => {\n      pathSubscribers.forEach((unsubscribe) => unsubscribe());\n    });\n  };\n}\n\nexport { DataSource, DataSourceManager, DeepObservedData, HttpDataSource, ObservedData, SimpleObservedData, compiledCondition, compiledNodeField, compliedConditions, compliedDataSourceField, compliedIteratorItem, createDataSourceManager, createIteratorContentData, registerDataSourceOnDemand, template, updateNode };\n","var a = /* @__PURE__ */ ((r) => (r.CONTAINER = \"container\", r.PAGE = \"page\", r.ROOT = \"app\", r.PAGE_FRAGMENT = \"page-fragment\", r))(a || {});\nconst C = \"displayConds\";\nvar E = /* @__PURE__ */ ((r) => (r.COMP = \"comp\", r.CODE = \"code\", r.DATA_SOURCE = \"data-source\", r))(E || {}), O = /* @__PURE__ */ ((r) => (r.CODE = \"code\", r))(O || {}), t = /* @__PURE__ */ ((r) => (r.CODE = \"code\", r.DATA_SOURCE_METHOD = \"data-source-method\", r))(t || {});\nexport {\n  E as ActionType,\n  t as HookCodeType,\n  O as HookType,\n  C as NODE_CONDS_KEY,\n  a as NodeType\n};\n","import { set, cloneDeep } from 'lodash-es';\nimport { NodeType } from '@tmagic/schema';\n\nconst asyncLoadJs = /* @__PURE__ */ (() => {\n  const documentMap = /* @__PURE__ */ new Map();\n  return (url, crossOrigin, document = globalThis.document) => {\n    let loaded = documentMap.get(document);\n    if (!loaded) {\n      loaded = /* @__PURE__ */ new Map();\n      documentMap.set(document, loaded);\n    }\n    if (loaded.get(url)) return loaded.get(url);\n    const load = new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      if (crossOrigin) {\n        script.crossOrigin = crossOrigin;\n      }\n      script.src = url;\n      document.body.appendChild(script);\n      script.onload = () => {\n        resolve();\n      };\n      script.onerror = () => {\n        reject(new Error(\"加载失败\"));\n      };\n      setTimeout(() => {\n        reject(new Error(\"timeout\"));\n      }, 60 * 1e3);\n    }).catch((err) => {\n      loaded.delete(url);\n      throw err;\n    });\n    loaded.set(url, load);\n    return loaded.get(url);\n  };\n})();\nconst asyncLoadCss = /* @__PURE__ */ (() => {\n  const documentMap = /* @__PURE__ */ new Map();\n  return (url, document = globalThis.document) => {\n    let loaded = documentMap.get(document);\n    if (!loaded) {\n      loaded = /* @__PURE__ */ new Map();\n      documentMap.set(document, loaded);\n    }\n    if (loaded.get(url)) return loaded.get(url);\n    const load = new Promise((resolve, reject) => {\n      const node = document.createElement(\"link\");\n      node.rel = \"stylesheet\";\n      node.href = url;\n      document.head.appendChild(node);\n      node.onload = () => {\n        resolve();\n      };\n      node.onerror = () => {\n        reject(new Error(\"加载失败\"));\n      };\n      setTimeout(() => {\n        reject(new Error(\"timeout\"));\n      }, 60 * 1e3);\n    }).catch((err) => {\n      loaded.delete(url);\n      throw err;\n    });\n    loaded.set(url, load);\n    return loaded.get(url);\n  };\n})();\nconst addClassName = (el, doc, className) => {\n  const oldEl = doc.querySelector(`.${className}`);\n  if (oldEl && oldEl !== el) removeClassName(oldEl, className);\n  if (!el.classList.contains(className)) el.classList.add(className);\n};\nconst removeClassName = (el, ...className) => {\n  el.classList.remove(...className);\n};\nconst removeClassNameByClassName = (doc, className) => {\n  const el = doc.querySelector(`.${className}`);\n  el?.classList.remove(className);\n  return el;\n};\nconst injectStyle = (doc, style) => {\n  const styleEl = doc.createElement(\"style\");\n  styleEl.innerHTML = style;\n  doc.head.appendChild(styleEl);\n  return styleEl;\n};\nconst createDiv = ({ className, cssText }) => {\n  const el = globalThis.document.createElement(\"div\");\n  el.className = className;\n  el.style.cssText = cssText;\n  return el;\n};\nconst getDocument = () => globalThis.document;\nconst calcValueByFontsize = (doc, value) => {\n  if (!doc) return value;\n  const { fontSize } = doc.documentElement.style;\n  if (fontSize) {\n    const times = globalThis.parseFloat(fontSize) / 100;\n    return Number((value / times).toFixed(2));\n  }\n  return value;\n};\nconst dslDomRelateConfig = {\n  getIdFromEl: (el) => el?.dataset?.tmagicId,\n  getElById: (doc, id) => doc?.querySelector(`[data-tmagic-id=\"${id}\"]`),\n  setIdToEl: (el, id) => {\n    el.dataset.tmagicId = `${id}`;\n  }\n};\nconst setDslDomRelateConfig = (name, value) => {\n  dslDomRelateConfig[name] = value;\n};\nconst getIdFromEl = () => dslDomRelateConfig.getIdFromEl;\nconst getElById = () => dslDomRelateConfig.getElById;\nconst setIdToEl = () => dslDomRelateConfig.setIdToEl;\n\nlet _globalThis;\nconst getGlobalThis = () => _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\nconst sleep = (ms) => new Promise((resolve) => {\n  const timer = setTimeout(() => {\n    clearTimeout(timer);\n    resolve();\n  }, ms);\n});\nconst toLine = (name = \"\") => name.replace(/\\B([A-Z])/g, \"-$1\").toLowerCase();\nconst toHump = (name = \"\") => name.replace(/-(\\w)/g, (_all, letter) => letter.toUpperCase());\nconst emptyFn = () => void 0;\nconst getNodePath = (id, data = []) => {\n  const path = [];\n  const get = function(id2, data2) {\n    if (!Array.isArray(data2)) {\n      return null;\n    }\n    for (let i = 0, l = data2.length; i < l; i++) {\n      const item = data2[i];\n      path.push(item);\n      if (`${item.id}` === `${id2}`) {\n        return item;\n      }\n      if (item.items) {\n        const node = get(id2, item.items);\n        if (node) {\n          return node;\n        }\n      }\n      path.pop();\n    }\n    return null;\n  };\n  get(id, data);\n  return path;\n};\nconst getNodeInfo = (id, root) => {\n  const info = {\n    node: null,\n    parent: null,\n    page: null\n  };\n  if (!root) return info;\n  if (id === root.id) {\n    info.node = root;\n    return info;\n  }\n  const path = getNodePath(id, root.items);\n  if (!path.length) return info;\n  path.unshift(root);\n  info.node = path[path.length - 1];\n  info.parent = path[path.length - 2];\n  path.forEach((item) => {\n    if (isPage(item) || isPageFragment(item)) {\n      info.page = item;\n      return;\n    }\n  });\n  return info;\n};\nconst filterXSS = (str) => str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");\nconst getUrlParam = (param, url) => {\n  const u = url || location.href;\n  const reg = new RegExp(`[?&#]${param}=([^&#]+)`, \"gi\");\n  const matches = u.match(reg);\n  let strArr;\n  if (matches && matches.length > 0) {\n    strArr = matches[matches.length - 1].split(\"=\");\n    if (strArr && strArr.length > 1) {\n      return filterXSS(strArr[1]);\n    }\n    return \"\";\n  }\n  return \"\";\n};\nconst isObject = (obj) => Object.prototype.toString.call(obj) === \"[object Object]\";\nconst isPop = (node) => Boolean(node?.type?.toLowerCase().endsWith(\"pop\"));\nconst isPage = (node) => {\n  if (!node) return false;\n  return Boolean(node.type?.toLowerCase() === NodeType.PAGE);\n};\nconst isPageFragment = (node) => {\n  if (!node) return false;\n  return Boolean(node.type?.toLowerCase() === NodeType.PAGE_FRAGMENT);\n};\nconst isNumber = (value) => /^(-?\\d+)(\\.\\d+)?$/.test(value);\nconst getHost = (targetUrl) => targetUrl.match(/\\/\\/([^/]+)/)?.[1];\nconst isSameDomain = (targetUrl = \"\", source = globalThis.location.host) => {\n  const isHttpUrl = /^(http[s]?:)?\\/\\//.test(targetUrl);\n  if (!isHttpUrl) return true;\n  return getHost(targetUrl) === source;\n};\nconst guid = (digit = 8) => \"x\".repeat(digit).replace(/[xy]/g, (c) => {\n  const r = Math.random() * 16 | 0;\n  const v = c === \"x\" ? r : r & 3 | 8;\n  return v.toString(16);\n});\nconst getKeysArray = (keys) => (\n  // 将 array[0] 转成 array.0\n  `${keys}`.replaceAll(/\\[(\\d+)\\]/g, \".$1\").split(\".\")\n);\nconst getValueByKeyPath = (keys = \"\", data = {}) => {\n  const keyArray = Array.isArray(keys) ? keys : getKeysArray(keys);\n  return keyArray.reduce((accumulator, currentValue) => {\n    if (isObject(accumulator)) {\n      return accumulator[currentValue];\n    }\n    if (Array.isArray(accumulator) && /^\\d*$/.test(`${currentValue}`)) {\n      return accumulator[currentValue];\n    }\n    throw new Error(`${data}中不存在${keys}`);\n  }, data);\n};\nconst setValueByKeyPath = (keys, value, data = {}) => set(data, keys, value);\nconst getNodes = (ids, data = []) => {\n  const nodes = [];\n  const get = function(ids2, data2) {\n    if (!Array.isArray(data2)) {\n      return;\n    }\n    for (let i = 0, l = data2.length; i < l; i++) {\n      const item = data2[i];\n      const index = ids2.findIndex((id) => `${id}` === `${item.id}`);\n      if (index > -1) {\n        ids2.slice(index, 1);\n        nodes.push(item);\n      }\n      if (item.items) {\n        get(ids2, item.items);\n      }\n    }\n  };\n  get(ids, data);\n  return nodes;\n};\nconst getDepKeys = (dataSourceDeps = {}, nodeId) => Array.from(\n  Object.values(dataSourceDeps).reduce((prev, cur) => {\n    (cur[nodeId]?.keys || []).forEach((key) => prev.add(key));\n    return prev;\n  }, /* @__PURE__ */ new Set())\n);\nconst getDepNodeIds = (dataSourceDeps = {}) => Array.from(\n  Object.values(dataSourceDeps).reduce((prev, cur) => {\n    Object.keys(cur).forEach((id) => {\n      prev.add(id);\n    });\n    return prev;\n  }, /* @__PURE__ */ new Set())\n);\nconst replaceChildNode = (newNode, data, parentId) => {\n  const path = getNodePath(newNode.id, data);\n  const node = path.pop();\n  let parent = path.pop();\n  if (parentId) {\n    parent = getNodePath(parentId, data).pop();\n  }\n  if (!node) throw new Error(\"未找到目标节点\");\n  if (!parent) throw new Error(\"未找到父节点\");\n  const index = parent.items?.findIndex((child) => child.id === node.id);\n  parent.items.splice(index, 1, newNode);\n};\nconst DSL_NODE_KEY_COPY_PREFIX = \"__tmagic__\";\nconst IS_DSL_NODE_KEY = \"__tmagic__dslNode\";\nconst compiledNode = (compile, node, dataSourceDeps = {}, sourceId) => {\n  let keys = [];\n  if (!sourceId) {\n    keys = getDepKeys(dataSourceDeps, node.id);\n  } else {\n    const dep = dataSourceDeps[sourceId];\n    keys = dep?.[node.id].keys || [];\n  }\n  keys.forEach((key) => {\n    const keys2 = getKeysArray(key);\n    const cacheKey = keys2.map((key2, index) => {\n      if (index < keys2.length - 1) {\n        return key2;\n      }\n      return `${DSL_NODE_KEY_COPY_PREFIX}${key2}`;\n    });\n    let templateValue = getValueByKeyPath(cacheKey, node);\n    if (typeof templateValue === \"undefined\") {\n      try {\n        const value = getValueByKeyPath(key, node);\n        setValueByKeyPath(cacheKey.join(\".\"), value, node);\n        templateValue = value;\n      } catch (e) {\n        console.warn(e);\n        return;\n      }\n    }\n    let newValue;\n    try {\n      newValue = compile(templateValue);\n    } catch (e) {\n      console.error(e);\n      newValue = \"\";\n    }\n    setValueByKeyPath(key, newValue, node);\n  });\n  return node;\n};\nconst compiledCond = (op, fieldValue, inputValue, range = []) => {\n  if (typeof fieldValue === \"string\" && typeof inputValue === \"undefined\") {\n    inputValue = \"\";\n  }\n  switch (op) {\n    case \"is\":\n      return fieldValue === inputValue;\n    case \"not\":\n      return fieldValue !== inputValue;\n    case \"=\":\n      return fieldValue === inputValue;\n    case \"!=\":\n      return fieldValue !== inputValue;\n    case \">\":\n      return fieldValue > inputValue;\n    case \">=\":\n      return fieldValue >= inputValue;\n    case \"<\":\n      return fieldValue < inputValue;\n    case \"<=\":\n      return fieldValue <= inputValue;\n    case \"between\":\n      return range.length > 1 && fieldValue >= range[0] && fieldValue <= range[1];\n    case \"not_between\":\n      return range.length < 2 || fieldValue < range[0] || fieldValue > range[1];\n    case \"include\":\n      return fieldValue?.includes?.(inputValue);\n    case \"not_include\":\n      return typeof fieldValue === \"undefined\" || !fieldValue.includes?.(inputValue);\n  }\n  return false;\n};\nconst getDefaultValueFromFields = (fields) => {\n  const data = {};\n  const defaultValue = {\n    string: void 0,\n    object: {},\n    array: [],\n    boolean: void 0,\n    number: void 0,\n    null: null,\n    any: void 0\n  };\n  fields.forEach((field) => {\n    if (typeof field.defaultValue !== \"undefined\") {\n      if (field.type === \"array\" && !Array.isArray(field.defaultValue)) {\n        data[field.name] = defaultValue.array;\n        return;\n      }\n      if (field.type === \"object\" && !isObject(field.defaultValue)) {\n        if (typeof field.defaultValue === \"string\") {\n          try {\n            data[field.name] = JSON.parse(field.defaultValue);\n          } catch (e) {\n            data[field.name] = defaultValue.object;\n          }\n          return;\n        }\n        data[field.name] = defaultValue.object;\n        return;\n      }\n      data[field.name] = cloneDeep(field.defaultValue);\n      return;\n    }\n    if (field.type === \"object\") {\n      data[field.name] = field.fields ? getDefaultValueFromFields(field.fields) : defaultValue.object;\n      return;\n    }\n    if (field.type) {\n      data[field.name] = defaultValue[field.type];\n      return;\n    }\n    data[field.name] = void 0;\n  });\n  return data;\n};\nconst DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX = \"ds-field::\";\nconst DATA_SOURCE_FIELDS_CHANGE_EVENT_PREFIX = \"ds-field-changed\";\nconst getKeys = Object.keys;\nconst calculatePercentage = (value, percentageStr) => {\n  const percentage = globalThis.parseFloat(percentageStr) / 100;\n  const result = value * percentage;\n  return result;\n};\nconst isPercentage = (value) => /^(\\d+)(\\.\\d+)?%$/.test(`${value}`);\nconst convertToNumber = (value, parentValue = 0) => {\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\" && isPercentage(value)) {\n    return calculatePercentage(parentValue, value);\n  }\n  return parseFloat(value);\n};\nconst addParamToUrl = (obj, global2 = globalThis, needReload = true) => {\n  const url = new URL(global2.location.href);\n  const { searchParams } = url;\n  for (const [k, v] of Object.entries(obj)) {\n    searchParams.set(k, v);\n  }\n  const newUrl = url.toString();\n  if (needReload) {\n    global2.location.href = newUrl;\n  } else {\n    global2.history.pushState({}, \"\", url);\n  }\n};\nconst dataSourceTemplateRegExp = /\\$\\{([\\s\\S]+?)\\}/g;\nconst isDslNode = (config) => typeof config[IS_DSL_NODE_KEY] === \"undefined\" || config[IS_DSL_NODE_KEY] === true;\nconst traverseNode = (node, cb, parents = []) => {\n  cb(node, parents);\n  if (Array.isArray(node.items) && node.items.length) {\n    parents.push(node);\n    node.items.forEach((item) => {\n      traverseNode(item, cb, [...parents]);\n    });\n  }\n};\nconst isValueIncludeDataSource = (value) => {\n  if (typeof value === \"string\" && /\\$\\{([\\s\\S]+?)\\}/.test(value)) {\n    return true;\n  }\n  if (Array.isArray(value) && `${value[0]}`.startsWith(DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX)) {\n    return true;\n  }\n  if (value?.isBindDataSource && value.dataSourceId) {\n    return true;\n  }\n  if (value?.isBindDataSourceField && value.dataSourceId) {\n    return true;\n  }\n  return false;\n};\n\nexport { DATA_SOURCE_FIELDS_CHANGE_EVENT_PREFIX, DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX, DSL_NODE_KEY_COPY_PREFIX, IS_DSL_NODE_KEY, addClassName, addParamToUrl, asyncLoadCss, asyncLoadJs, calcValueByFontsize, calculatePercentage, compiledCond, compiledNode, convertToNumber, createDiv, dataSourceTemplateRegExp, emptyFn, filterXSS, getDefaultValueFromFields, getDepKeys, getDepNodeIds, getDocument, getElById, getGlobalThis, getHost, getIdFromEl, getKeys, getKeysArray, getNodeInfo, getNodePath, getNodes, getUrlParam, getValueByKeyPath, guid, injectStyle, isDslNode, isNumber, isObject, isPage, isPageFragment, isPercentage, isPop, isSameDomain, isValueIncludeDataSource, removeClassName, removeClassNameByClassName, replaceChildNode, setDslDomRelateConfig, setIdToEl, setValueByKeyPath, sleep, toHump, toLine, traverseNode };\n","import { dataSourceTemplateRegExp, getKeysArray, DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX, isObject } from '@tmagic/utils';\nimport { HookType, NODE_CONDS_KEY } from '@tmagic/schema';\n\nvar DepTargetType = /* @__PURE__ */ ((DepTargetType2) => {\n  DepTargetType2[\"DEFAULT\"] = \"default\";\n  DepTargetType2[\"CODE_BLOCK\"] = \"code-block\";\n  DepTargetType2[\"DATA_SOURCE\"] = \"data-source\";\n  DepTargetType2[\"DATA_SOURCE_METHOD\"] = \"data-source-method\";\n  DepTargetType2[\"DATA_SOURCE_COND\"] = \"data-source-cond\";\n  return DepTargetType2;\n})(DepTargetType || {});\n\nclass Target {\n  /**\n   * 如何识别目标\n   */\n  isTarget;\n  /**\n   * 目标id，不可重复\n   * 例如目标是代码块，则为代码块id\n   */\n  id;\n  /**\n   * 目标名称，用于显示在依赖列表中\n   */\n  name;\n  /**\n   * 不同的目标可以进行分类，例如代码块，数据源可以为两个不同的type\n   */\n  type = DepTargetType.DEFAULT;\n  /**\n   * 依赖详情\n   * 实例：{ 'node_id': { name: 'node_name', keys: [ created, mounted ] } }\n   */\n  deps = {};\n  /**\n   * 是否默认收集，默认为true，当值为false时需要传入type参数给collect方法才会被收集\n   */\n  isCollectByDefault;\n  constructor(options) {\n    this.isTarget = options.isTarget;\n    this.id = options.id;\n    this.name = options.name;\n    this.isCollectByDefault = options.isCollectByDefault ?? true;\n    if (options.type) {\n      this.type = options.type;\n    }\n    if (options.initialDeps) {\n      this.deps = options.initialDeps;\n    }\n  }\n  /**\n   * 更新依赖\n   * @param option 节点配置\n   * @param key 哪个key配置了这个目标的id\n   */\n  updateDep({ id, name, key, data }) {\n    const dep = this.deps[id] || {\n      name,\n      keys: []\n    };\n    dep.name = name;\n    dep.data = data;\n    this.deps[id] = dep;\n    if (dep.keys.indexOf(key) === -1) {\n      dep.keys.push(key);\n    }\n  }\n  /**\n   * 删除依赖\n   * @param node 哪个节点的依赖需要移除，如果为空，则移除所有依赖\n   * @param key 节点下哪个key需要移除，如果为空，则移除改节点下的所有依赖key\n   * @returns void\n   */\n  removeDep(id, key) {\n    if (typeof id === \"undefined\") {\n      Object.keys(this.deps).forEach((depKey) => {\n        delete this.deps[depKey];\n      });\n      return;\n    }\n    const dep = this.deps[id];\n    if (!dep) return;\n    if (key) {\n      const index = dep.keys.indexOf(key);\n      dep.keys.splice(index, 1);\n      if (dep.keys.length === 0) {\n        delete this.deps[id];\n      }\n    } else {\n      delete this.deps[id];\n    }\n  }\n  /**\n   * 判断指定节点下的指定key是否存在在依赖列表中\n   * @param node 哪个节点\n   * @param key 哪个key\n   * @returns boolean\n   */\n  hasDep(id, key) {\n    const dep = this.deps[id];\n    return Boolean(dep?.keys.find((d) => d === key));\n  }\n  destroy() {\n    this.deps = {};\n  }\n}\n\nconst createCodeBlockTarget = (id, codeBlock, initialDeps = {}) => new Target({\n  type: DepTargetType.CODE_BLOCK,\n  id,\n  initialDeps,\n  name: codeBlock.name,\n  isTarget: (_key, value) => {\n    if (id === value) {\n      return true;\n    }\n    if (value?.hookType === HookType.CODE && Array.isArray(value.hookData)) {\n      const index = value.hookData.findIndex((item) => item.codeId === id);\n      return Boolean(index > -1);\n    }\n    return false;\n  }\n});\nconst isIncludeArrayField = (keys, fields) => {\n  let f = fields;\n  return keys.some((key, index) => {\n    const field = f.find(({ name }) => name === key);\n    f = field?.fields || [];\n    return field && field.type === \"array\" && // 不是整数\n    /^(?!\\d+$).*$/.test(`${keys[index + 1]}`) && index < keys.length - 1;\n  });\n};\nconst isDataSourceTemplate = (value, ds, hasArray = false) => {\n  const templates = value.match(dataSourceTemplateRegExp) || [];\n  if (templates.length <= 0) {\n    return false;\n  }\n  const arrayFieldTemplates = [];\n  const fieldTemplates = [];\n  templates.forEach((tpl) => {\n    const expression = tpl.substring(2, tpl.length - 1);\n    const keys = getKeysArray(expression);\n    const dsId = keys.shift();\n    if (!dsId || dsId !== ds.id) {\n      return;\n    }\n    if (isIncludeArrayField(keys, ds.fields)) {\n      arrayFieldTemplates.push(tpl);\n    } else {\n      fieldTemplates.push(tpl);\n    }\n  });\n  if (hasArray) {\n    return arrayFieldTemplates.length > 0;\n  }\n  return fieldTemplates.length > 0;\n};\nconst isSpecificDataSourceTemplate = (value, dsId) => value?.isBindDataSourceField && value.dataSourceId && value.dataSourceId === dsId && typeof value.template === \"string\";\nconst isUseDataSourceField = (value, id) => {\n  if (!Array.isArray(value) || typeof value[0] !== \"string\") {\n    return false;\n  }\n  const [prefixId] = value;\n  const prefixIndex = prefixId.indexOf(DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX);\n  if (prefixIndex === -1) {\n    return false;\n  }\n  const dsId = prefixId.substring(prefixIndex + DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX.length);\n  return dsId === id;\n};\nconst isDataSourceTemplateNotIncludeArrayField = (value, ds) => {\n  const templates = value.match(dataSourceTemplateRegExp) || [];\n  let result = false;\n  for (const tpl of templates) {\n    const expression = tpl.substring(2, tpl.length - 1);\n    const keys = getKeysArray(expression);\n    const dsId = keys.shift();\n    if (!dsId || dsId !== ds.id) {\n      continue;\n    }\n    if (isIncludeArrayField(keys, ds.fields)) {\n      return false;\n    }\n    result = true;\n  }\n  return result;\n};\nconst isDataSourceTarget = (ds, key, value, hasArray = false) => {\n  if (`${key}`.startsWith(NODE_CONDS_KEY)) {\n    return false;\n  }\n  if (typeof value === \"string\") {\n    return isDataSourceTemplate(value, ds, hasArray);\n  }\n  if (isObject(value) && value?.isBindDataSource && value.dataSourceId && value.dataSourceId === ds.id) {\n    return true;\n  }\n  if (isSpecificDataSourceTemplate(value, ds.id)) {\n    return true;\n  }\n  if (isUseDataSourceField(value, ds.id)) {\n    const [, ...keys] = value;\n    const includeArray = isIncludeArrayField(keys, ds.fields);\n    if (hasArray) {\n      return includeArray;\n    }\n    return !includeArray;\n  }\n  return false;\n};\nconst isDataSourceCondTarget = (ds, key, value, hasArray = false) => {\n  if (!Array.isArray(value) || !ds) {\n    return false;\n  }\n  const [dsId, ...keys] = value;\n  if (dsId !== ds.id || !`${key}`.startsWith(NODE_CONDS_KEY)) {\n    return false;\n  }\n  if (ds.fields?.find((field) => field.name === keys[0])) {\n    const includeArray = isIncludeArrayField(keys, ds.fields);\n    if (hasArray) {\n      return includeArray;\n    }\n    return !includeArray;\n  }\n  return false;\n};\nconst createDataSourceTarget = (ds, initialDeps = {}) => new Target({\n  type: DepTargetType.DATA_SOURCE,\n  id: ds.id,\n  initialDeps,\n  isTarget: (key, value) => isDataSourceTarget(ds, key, value)\n});\nconst createDataSourceCondTarget = (ds, initialDeps = {}) => new Target({\n  type: DepTargetType.DATA_SOURCE_COND,\n  id: ds.id,\n  initialDeps,\n  isTarget: (key, value) => isDataSourceCondTarget(ds, key, value)\n});\nconst createDataSourceMethodTarget = (ds, initialDeps = {}) => new Target({\n  type: DepTargetType.DATA_SOURCE_METHOD,\n  id: ds.id,\n  initialDeps,\n  isTarget: (_key, value) => {\n    if (!Array.isArray(value) || !ds) {\n      return false;\n    }\n    const [dsId, ...keys] = value;\n    if (dsId !== ds.id || ds.fields?.find((field) => field.name === keys[0])) {\n      return false;\n    }\n    return true;\n  }\n});\nconst traverseTarget = (targetsList, cb, type) => {\n  Object.values(targetsList).forEach((targets) => {\n    Object.values(targets).forEach((target) => {\n      if (type && target.type !== type) {\n        return;\n      }\n      cb(target);\n    });\n  });\n};\n\nclass Watcher {\n  targetsList = {};\n  childrenProp = \"items\";\n  idProp = \"id\";\n  nameProp = \"name\";\n  constructor(options) {\n    if (options?.initialTargets) {\n      this.targetsList = options.initialTargets;\n    }\n    if (options?.childrenProp) {\n      this.childrenProp = options.childrenProp;\n    }\n  }\n  getTargetsList() {\n    return this.targetsList;\n  }\n  /**\n   * 获取指定类型中的所有target\n   * @param type 分类\n   * @returns Target[]\n   */\n  getTargets(type = DepTargetType.DEFAULT) {\n    return this.targetsList[type] || {};\n  }\n  /**\n   * 添加新的目标\n   * @param target Target\n   */\n  addTarget(target) {\n    const targets = this.getTargets(target.type) || {};\n    this.targetsList[target.type] = targets;\n    targets[target.id] = target;\n  }\n  /**\n   * 获取指定id的target\n   * @param id target id\n   * @returns Target\n   */\n  getTarget(id, type = DepTargetType.DEFAULT) {\n    return this.getTargets(type)[id];\n  }\n  /**\n   * 判断是否存在指定id的target\n   * @param id target id\n   * @returns boolean\n   */\n  hasTarget(id, type = DepTargetType.DEFAULT) {\n    return Boolean(this.getTarget(id, type));\n  }\n  /**\n   * 判断是否存在指定类型的target\n   * @param type target type\n   * @returns boolean\n   */\n  hasSpecifiedTypeTarget(type = DepTargetType.DEFAULT) {\n    return Object.keys(this.getTargets(type)).length > 0;\n  }\n  /**\n   * 删除指定id的target\n   * @param id target id\n   */\n  removeTarget(id, type = DepTargetType.DEFAULT) {\n    const targets = this.getTargets(type);\n    if (targets[id]) {\n      targets[id].destroy();\n      delete targets[id];\n    }\n  }\n  /**\n   * 删除指定分类的所有target\n   * @param type 分类\n   * @returns void\n   */\n  removeTargets(type = DepTargetType.DEFAULT) {\n    const targets = this.targetsList[type];\n    if (!targets) return;\n    for (const target of Object.values(targets)) {\n      target.destroy();\n    }\n    delete this.targetsList[type];\n  }\n  /**\n   * 删除所有target\n   */\n  clearTargets() {\n    Object.keys(this.targetsList).forEach((key) => {\n      delete this.targetsList[key];\n    });\n  }\n  /**\n   * 收集依赖\n   * @param nodes 需要收集的节点\n   * @param deep 是否需要收集子节点\n   * @param type 强制收集指定类型的依赖\n   */\n  collect(nodes, depExtendedData = {}, deep = false, type) {\n    this.collectByCallback(nodes, type, ({ node, target }) => {\n      this.removeTargetDep(target, node);\n      this.collectItem(node, target, depExtendedData, deep);\n    });\n  }\n  collectByCallback(nodes, type, cb) {\n    traverseTarget(\n      this.targetsList,\n      (target) => {\n        if (!type && !target.isCollectByDefault) {\n          return;\n        }\n        nodes.forEach((node) => {\n          cb({ node, target });\n        });\n      },\n      type\n    );\n  }\n  /**\n   * 清除所有目标的依赖\n   * @param nodes 需要清除依赖的节点\n   */\n  clear(nodes, type) {\n    let { targetsList } = this;\n    if (type) {\n      targetsList = {\n        [type]: this.getTargets(type)\n      };\n    }\n    const clearedItemsNodeIds = [];\n    traverseTarget(targetsList, (target) => {\n      if (nodes) {\n        nodes.forEach((node) => {\n          target.removeDep(node[this.idProp]);\n          if (Array.isArray(node[this.childrenProp]) && node[this.childrenProp].length && !clearedItemsNodeIds.includes(node[this.idProp])) {\n            clearedItemsNodeIds.push(node[this.idProp]);\n            this.clear(node[this.childrenProp]);\n          }\n        });\n      } else {\n        target.removeDep();\n      }\n    });\n  }\n  /**\n   * 清除指定类型的依赖\n   * @param type 类型\n   * @param nodes 需要清除依赖的节点\n   */\n  clearByType(type, nodes) {\n    this.clear(nodes, type);\n  }\n  collectItem(node, target, depExtendedData = {}, deep = false) {\n    const collectTarget = (config, prop = \"\") => {\n      const doCollect = (key, value) => {\n        const keyIsItems = key === this.childrenProp;\n        const fullKey = prop ? `${prop}.${key}` : key;\n        if (target.isTarget(fullKey, value)) {\n          target.updateDep({\n            id: node[this.idProp],\n            name: `${node[this.nameProp] || node[this.idProp]}`,\n            data: depExtendedData,\n            key: fullKey\n          });\n        } else if (!keyIsItems && Array.isArray(value)) {\n          value.forEach((item, index) => {\n            if (isObject(item)) {\n              collectTarget(item, `${fullKey}[${index}]`);\n            }\n          });\n        } else if (isObject(value)) {\n          collectTarget(value, fullKey);\n        }\n        if (keyIsItems && deep && Array.isArray(value)) {\n          value.forEach((child) => {\n            this.collectItem(child, target, depExtendedData, deep);\n          });\n        }\n      };\n      Object.entries(config).forEach(([key, value]) => {\n        if (typeof value === \"undefined\" || value === \"\") return;\n        doCollect(key, value);\n      });\n    };\n    collectTarget(node);\n  }\n  removeTargetDep(target, node, key) {\n    target.removeDep(node[this.idProp], key);\n    if (typeof key === \"undefined\" && Array.isArray(node[this.childrenProp]) && node[this.childrenProp].length) {\n      node[this.childrenProp].forEach((item) => {\n        this.removeTargetDep(target, item, key);\n      });\n    }\n  }\n}\n\nexport { DepTargetType, Target, Watcher, createCodeBlockTarget, createDataSourceCondTarget, createDataSourceMethodTarget, createDataSourceTarget, isDataSourceCondTarget, isDataSourceTarget, isDataSourceTemplate, isDataSourceTemplateNotIncludeArrayField, isIncludeArrayField, isSpecificDataSourceTemplate, isUseDataSourceField, traverseTarget };\n"],"names":["freeGlobal","global","Object","freeSelf","self","root","Function","Symbol$1","Symbol","objectProto$c","prototype","hasOwnProperty$9","hasOwnProperty","nativeObjectToString$1","toString","symToStringTag$1","toStringTag","undefined","nativeObjectToString","symToStringTag","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","isArray","Array","isObject","type","identity","isFunction","uid","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString$1","toSource","func","reIsHostCtor","funcProto","objectProto$a","funcToString","hasOwnProperty$8","reIsNative","RegExp","replace","baseIsNative","test","getNative","object","key","getValue","count","lastCalled","WeakMap","objectCreate","create","baseCreate","proto","nativeNow","Date","now","defineProperty","baseSetToString","string","configurable","enumerable","writable","setToString","stamp","remaining","arguments","apply","baseIsNaN","arrayIncludes","array","length","fromIndex","index","strictIndexOf","predicate","baseFindIndex","baseIndexOf","reIsUint","isIndex","eq","other","hasOwnProperty$7","assignValue","objValue","baseAssignValue","nativeMax","Math","max","isLength","isArrayLike","objectProto$8","isPrototype","Ctor","constructor","baseIsArguments","objectProto$7","hasOwnProperty$6","propertyIsEnumerable$1","propertyIsEnumerable","isArguments","freeExports$2","exports","nodeType","freeModule$2","module","Buffer$1","Buffer","isBuffer","typedArrayTags","baseUnary","freeExports$1","freeModule$1","freeProcess","process","nodeUtil","types","require","binding","nodeIsTypedArray","isTypedArray","hasOwnProperty$5","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","n","iteratee","baseTimes","String","push","overArg","transform","arg","nativeKeys","hasOwnProperty$4","baseKeys","nativeCreate","hasOwnProperty$2","hasOwnProperty$1","Hash","entries","this","clear","entry","set","assocIndexOf","__data__","size","has","get","data","splice","ListCache","pop","Map$1","getMapData","map","MapCache","arrayPush","values","offset","hash","spreadableSymbol","isConcatSpreadable","isFlattenable","getPrototype","getPrototypeOf","Stack","pairs","LARGE_ARRAY_SIZE$1","freeExports","freeModule","allocUnsafe","nativeGetSymbols$1","getOwnPropertySymbols","getSymbols","resIndex","arrayFilter","symbol","getAllKeys","keysFunc","symbolsFunc","baseGetAllKeys","DataView","Promise$1","Set","mapTag$3","promiseTag","setTag$3","weakMapTag$1","dataViewTag$2","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","Uint8Array","cloneArrayBuffer","arrayBuffer","byteLength","reFlags","symbolProto","symbolValueOf","valueOf","initCloneByTag","isDeep","regexp","dataView","buffer","byteOffset","typedArray","cloneTypedArray","source","lastIndex","nodeIsMap","isMap","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","stack","input","initCloneArray","isFunc","slice","initCloneObject","stacked","forEach","subValue","add","props","arrayEach","cloneDeep","CLONE_DEEP_FLAG","SetCache","cacheHas","cache","setToArray","isArrayLikeObject","createSet","start","args","otherArgs","thisArg","overRest","baseRest","arrays","comparator","includes","isCommon","seen","outer","computed","seenIndex","baseUniq","depth","isStrict","baseFlatten","ObservedData","SimpleObservedData","event","EventEmitter","initialData","super","update","path","setValueByKeyPath","changeEvent","updateData","emit","on","callback","off","getData","getValueByKeyPath","destroy","DataSource","EventEmitter$1","isInit","app","mockData","id","schema","observedData","fields","methods","options","setFields","setMethods","ObservedDataClass","platform","mocks","find","mock","useInEditor","getDefaultData","useMock","enable","setData","setValue","onDataChange","offDataChange","getDefaultValueFromFields","init","removeAllListeners","urlencoded","reduce","prev","v","JSON","stringify","globalThis","encodeURIComponent","webRequest","async","url","method","headers","params","config","query","body","fetch","json","Map","compiledCondition","cond","op","range","field","sourceId","dsData","fieldValue","join","compiledCond","console","warn","compliedConditions","node","NODE_CONDS_KEY","createIteratorContentData","itemData","dsId","rawData","obj","assign","template","replaceAll","dataSourceTemplateRegExp","match","$1","compiledNodeField","isBindDataSource","dataSourceId","isBindDataSourceField","compliedDataSourceField","prefixId","prefixIndex","indexOf","DATA_SOURCE_FIELDS_SELECT_VALUE_PREFIX","substring","compliedIteratorItem","compile","item","deps","condDeps","inEditor","ctxData","items","newNode","condResult","item2","compiledNode","DataSourceManager","static","register","dataSource","dataSourceClassMap","getDataSourceClass","registerObservedData","dataSourceMap","dsl","dataSources","addDataSource","dataSourceList","from","Promise","allSettled","ds","then","errors","status","reason","all","catch","jsEngine","disabledInitInJsEngine","content","timing","request","removeDataSource","delete","updateSchema","schemas","newDs","deep","visible","dataSourceDeps","compliedConds","compliedIteratorItemConds","dataSourceField","compliedIteratorItems","nodes","getDeps","cacheKey","ids","traverseNode","node2","watcher","Watcher","addTarget","Target","isTarget","DSL_NODE_KEY_COPY_PREFIX","isDataSourceTarget","isDataSourceCondTarget","collect","getTarget","isLoading","error","httpOptions","beforeRequest","afterRequest","autoFetch","otherHttpOptions","reqOptions","res","afterResponse","responseOptions","dataPath","data2","msg","message","post","a","r","CONTAINER","PAGE","ROOT","PAGE_FRAGMENT","C","documentMap","crossOrigin","document","loaded","load","reject","script","createElement","src","appendChild","onload","onerror","Error","setTimeout","err","rel","href","head","name","toLowerCase","getKeysArray","split","accumulator","currentValue","dep","getDepKeys","nodeId","cur","keys2","key2","newValue","templateValue","inputValue","defaultValue","boolean","number","null","any","parse","cb","parents","DepTargetType","DepTargetType2","DEFAULT","isCollectByDefault","initialDeps","updateDep","removeDep","depKey","hasDep","Boolean","d","isIncludeArrayField","f","some","hasArray","startsWith","isDataSourceTemplate","templates","arrayFieldTemplates","fieldTemplates","tpl","expression","shift","isSpecificDataSourceTemplate","isUseDataSourceField","includeArray","traverseTarget","targetsList","targets","target","childrenProp","idProp","nameProp","initialTargets","getTargetsList","getTargets","hasTarget","hasSpecifiedTypeTarget","removeTarget","removeTargets","clearTargets","depExtendedData","collectByCallback","removeTargetDep","collectItem","clearedItemsNodeIds","clearByType","collectTarget","prop","doCollect","keyIsItems","fullKey","child"],"mappings":"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"}