{"version":3,"file":"use-component-legacy-ZbsrsM14.js","sources":["../../../../../../runtime/vue-runtime-help/dist/hooks/use-component.js"],"sourcesContent":["/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { inject } from 'vue-demi';\nimport { toLine } from '@tmagic/core';\n/**\n * 通过组件类型在 App 内获取组件\n * @param options 若为字符串则为组件类型，若为对象则为参数选项\n * @returns 得到的组件，若未找到则返回带 magic-ui- 前缀的组件类型\n */\nexport function useComponent(options = '') {\n    let componentType;\n    let app;\n    let component;\n    if (typeof options === 'string') {\n        componentType = options;\n    }\n    else {\n        ({ componentType, app } = options);\n    }\n    if (!componentType || componentType === '') {\n        componentType = 'container';\n    }\n    if (!app) {\n        app = inject('app');\n    }\n    component = resolveComponent({ componentType, app });\n    if (!component && !componentType.startsWith('magic-ui-')) {\n        componentType = `magic-ui-${toLine(componentType)}`;\n        component = resolveComponent({ componentType, app });\n    }\n    return component ?? componentType;\n}\nfunction resolveComponent({ componentType, app }) {\n    return app?.resolveComponent(componentType);\n}\n"],"names":["resolveComponent","componentType","app","options","component","VueDemi","inject","startsWith","toLine"],"mappings":"gIA+CA,SAAAA,GAAAC,cAAAA,EAAAC,IAAAA,IACA,OAAAA,GAAAF,iBAAAC,EACA,QAzBA,SAAAE,EAAA,IACA,IAAAF,EACAC,EACAE,EAkBA,MAjBA,iBAAAD,EACAF,EAAAE,IAGAF,gBAAAC,OAAAC,GAEAF,GAAA,KAAAA,IACAA,EAAA,aAEAC,IACAA,EAAcG,QAAMC,OAAA,QAEpBF,EAAAJ,EAAA,CAAAC,gBAAAC,QACAE,GAAAH,EAAAM,WAAA,eACAN,EAAA,YAAAO,EAAAP,KACAG,EAAAJ,EAAA,CAAAC,gBAAAC,SAEAE,GAAAH,CACA"}