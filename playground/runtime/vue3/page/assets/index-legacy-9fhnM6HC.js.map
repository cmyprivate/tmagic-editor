{"version":3,"file":"index-legacy-9fhnM6HC.js","sources":["../../../../../../vue-components/overlay/src/index.vue"],"sourcesContent":["<template>\n  <component v-if=\"visible\" :is=\"containerComponent\" :config=\"{ items: config.items }\">\n    <slot></slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onBeforeUnmount, type PropType, ref } from 'vue-demi';\n\nimport type { Id, MContainer, MNode, MPage } from '@tmagic/core';\nimport { useApp, useComponent } from '@tmagic/vue-runtime-help';\n\ninterface OverlaySchema extends Omit<MContainer, 'id'> {\n  id?: Id;\n  type?: 'overlay';\n}\n\nexport default defineComponent({\n  props: {\n    config: {\n      type: Object as PropType<OverlaySchema>,\n      required: true,\n    },\n    iteratorIndex: Array as PropType<number[]>,\n    iteratorContainerId: Array as PropType<Id[]>,\n    model: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  setup(props) {\n    const visible = ref(false);\n\n    const { app, node } = useApp({\n      config: props.config,\n      iteratorContainerId: props.iteratorContainerId,\n      iteratorIndex: props.iteratorIndex,\n      methods: {\n        openOverlay() {\n          visible.value = true;\n          app?.emit('overlay:open', node);\n        },\n        closeOverlay() {\n          visible.value = false;\n          app?.emit('overlay:close', node);\n        },\n      },\n    });\n\n    const containerComponent = useComponent({ componentType: 'container', app });\n\n    const editorSelectHandler = (\n      info: {\n        node: MNode;\n        page: MPage;\n        parent: MContainer;\n      },\n      path: MNode[],\n    ) => {\n      if (path.find((node: MNode) => node.id === props.config.id)) {\n        node?.instance.openOverlay();\n      } else {\n        node?.instance.closeOverlay();\n      }\n    };\n\n    app?.page?.on('editor:select', editorSelectHandler);\n\n    onBeforeUnmount(() => {\n      app?.page?.off('editor:select', editorSelectHandler);\n    });\n\n    return {\n      containerComponent,\n      visible,\n    };\n  },\n});\n</script>\n"],"names":["_sfc_main","VueDemi","defineComponent","props","config","type","Object","required","iteratorIndex","Array","iteratorContainerId","model","default","setup","visible","app","node","useApp","methods","openOverlay","value","emit","closeOverlay","containerComponent","useComponent","componentType","editorSelectHandler","info","path","find","node2","id","instance","page","on","onBeforeUnmount","off","_ctx","_cache","$props","$setup","$data","$options","Vue","openBlock","resolveDynamicComponent","key","renderSlot","$slots","_","createCommentVNode"],"mappings":"gPAiBe,MAAAA,EAAAC,QAAgBC,gBAAA,CAAAC,MAAA,CACtBC,OAAA,CACGC,KAAAC,OACAC,UAAA,GAERC,cAAAC,MACeC,oBAAAD,MACME,MAAA,CACdN,KAAAC,OACCM,QAAAA,MAAA,KAGVC,KAAAA,CAAAV,GAGE,MAAAW,EAAgBb,iBAEhBc,IAAAA,EAAAC,KAAAA,GAAAC,EAAA,CAA6Bb,OAAAD,EAAAC,OACbM,oBAAAP,EAAAO,oBACaF,cAAAL,EAAAK,cACNU,QAAA,CACZC,WAAAA,GAELL,EAAAM,OAAA,EACAL,GAAAM,KAAA,eAAAL,EAA8B,EAChCM,YAAAA,GAEER,EAAAM,OAAA,EACAL,GAAAM,KAAA,gBAAAL,EAA+B,KAKrCO,EAAAC,EAAA,CAAAC,cAAA,YAAAV,QAEAW,EAAAA,CAAAC,EAAAC,KAQEA,EAAAC,MAAAC,GAAAA,EAAAC,KAAA5B,EAAAC,OAAA2B,KACEf,GAAAgB,SAAAb,cAEAH,GAAAgB,SAAAV,cAA4B,EAUhC,OANAP,GAAAkB,MAAAC,GAAA,gBAAAR,GAEAzB,QAAAkC,iBAAA,KACEpB,GAAAkB,MAAAG,IAAA,gBAAAV,EAAA,IAGF,CAAOH,qBACLT,UAEF,+BA3EF,SAAAuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GADF,OAAAL,EAAAvB,SAAA6B,IAAAC,4BACuExC,IAAYyC,wBAAAR,EAAAd,oBAAA,CAAAuB,IAAA,iCAClE,2BAFjBH,IAAAI,WAAAV,EAAAW,OAAA,cAAAC,EAAA,GAAA,EAAA,CAAA,YAAAN,IAAAO,mBAAA,IAAA"}