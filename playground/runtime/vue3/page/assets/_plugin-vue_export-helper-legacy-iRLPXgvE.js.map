{"version":3,"file":"_plugin-vue_export-helper-legacy-iRLPXgvE.js","sources":["../../../../../../runtime/vue-runtime-help/dist/hooks/use-app.js"],"sourcesContent":["/*\n * Tencent is pleased to support the open source community by making TMagicEditor available.\n *\n * Copyright (C) 2023 THL A29 Limited, a Tencent company.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { inject, onBeforeUnmount, onMounted } from 'vue-demi';\nimport { isDslNode } from '@tmagic/core';\nexport const useApp = ({ methods = {}, config, iteratorContainerId, iteratorIndex }) => {\n    const app = inject('app');\n    const emitData = {\n        config,\n        ...methods,\n    };\n    const display = (config) => {\n        if (config.visible === false)\n            return false;\n        if (config.condResult === false)\n            return false;\n        const displayCfg = config.display;\n        if (typeof displayCfg === 'function') {\n            return displayCfg(app);\n        }\n        return displayCfg !== false;\n    };\n    const node = isDslNode(config) && config.id ? app?.getNode(config.id, iteratorContainerId, iteratorIndex) : undefined;\n    if (node) {\n        node.emit('created', emitData);\n        onMounted(() => {\n            node.emit('mounted', emitData);\n        });\n        onBeforeUnmount(() => {\n            node.emit('destroy', emitData);\n        });\n    }\n    return {\n        app,\n        node,\n        display,\n    };\n};\n"],"names":["exports","methods","config","iteratorContainerId","iteratorIndex","app","VueDemi","inject","emitData","node","isDslNode","id","getNode","undefined","emit","onMounted","onBeforeUnmount","display","visible","condResult","displayCfg"],"mappings":"gIAmBAA,EAAA,KAAA,EAAAC,UAAA,CAAA,EAAAC,SAAAC,sBAAAC,oBACA,MAAAC,EAAgBC,QAAMC,OAAA,OACtBC,EAAA,CACAN,YACAD,GAaAQ,EAAAC,EAAAR,IAAAA,EAAAS,GAAAN,GAAAO,QAAAV,EAAAS,GAAAR,EAAAC,QAAAS,EAUA,OATAJ,IACAA,EAAAK,KAAA,UAAAN,GACQF,QAASS,WAAA,KACjBN,EAAAK,KAAA,UAAAN,EAAA,IAEQF,QAAeU,iBAAA,KACvBP,EAAAK,KAAA,UAAAN,EAAA,KAGA,CACAH,MACAI,OACAQ,QAxBAf,IACA,IAAA,IAAAA,EAAAgB,QACA,OAAA,EACA,IAAA,IAAAhB,EAAAiB,WACA,OAAA,EACA,MAAAC,EAAAlB,EAAAe,QACA,MAAA,mBAAAG,EACAA,EAAAf,IAEA,IAAAe,CAAA,EAgBA"}